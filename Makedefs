# Using:
ifeq (0, 1)
#########################

TOPDIR := <path to root>
include $(TOPDIR)/Makedefs

#########################
endif


# Ensure TOPDIR is defined
ifeq ($(origin TOPDIR), undefined)
  $(error TOPDIR is undefined)
endif


include $(TOPDIR)/Make.defaults
include $(TOPDIR)/Make.rules


# Assert that given variables are set and all have non-empty values
#
# Calling: `@:$(call assert_defined, var1 var2 ..., description(optional))`
assert_defined = \
  $(foreach 1,$1, \
    $(call __check_defined,$1,$(strip $(value 2))))
__check_defined = \
  $(if $(value $1),, \
    $(error Undefined $1 $(if $2,($2))))

# Store a variable so that a target is rebuilt when it changes
#
# Calling: `$(call declare_variable, var)`
declare_variable = \
	$(eval $(call __declare_variable,$(strip $1)))
define __declare_variable
  $1: .empty | $(BUILD_DIR)
	@if [[ `cat $(BUILD_DIR)/$1 2>&1` != '$($1)' ]]; then \
		echo -n $($1) > $(BUILD_DIR)/$1; \
	fi
endef

ifeq ($(UNAME), Darwin)
  # Get the path where brew installed the library
  #
  # Calling: `@:$(call brew_path, lib)`
  brew_path = \
	$(shell brew info $1 | head -n4 | tail -n1 | cut -d' ' -f1)
endif


# Programs
FILE_SIZE_BYTES := $(TOPDIR)/toolchain/make/fileSizeBytes.sh
FILE_SIZE_SECTORS := $(TOPDIR)/toolchain/make/fileSizeSectors.sh
